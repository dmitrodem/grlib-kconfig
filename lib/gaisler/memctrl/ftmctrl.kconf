menuconfig MCTRLFT
    bool "PROM/SRAM/SDRAM Memory controller with EDAC"
    default n
    help
    Say Y here to enable a memory controller with EDAC. The controller
    can access PROM, I/O, SRAM and SDRAM. The bus width for PROM
    and SRAM is programmable to 8-, 16- or 32-bits.

config MCTRLFT_8BIT
    bool "8-bit PROM/SRAM bus support"
    depends on MCTRLFT
    default n
    help
    If you say Y here, the PROM/SRAM memory controller will support
    8-bit mode, i.e. operate from 8-bit devices as if they were 32-bit.
    Say N to save a few hundred gates.

config MCTRLFT_16BIT
    bool "16-bit PROM/SRAM bus support"
    depends on MCTRLFT
    default n
    help
    16-bit mode, i.e. operate from 16-bit devices as if they were 32-bit.
    Say N to save a few hundred gates.

config MCTRLFT_5CS
    bool "5th SRAM chip-select"
    depends on MCTRLFT
    default n
    help
    If you say Y here, the 5th (RAMSN[4]) SRAM chip select signal will
    be enabled. If you don't intend to use it, say N and save some gates.

choice
    prompt "PROM banks and sizes, or programmable"
    depends on MCTRLFT
    default MCTRLFT_ROMASEL0
    help
    Select number of PROM banks and their sizes. Two or four banks can be selected.
    For two banks, a fixed bank size can be selected, ranging from 64 kByte to 256 MByte.
    For four banks, a fixed bank size can be selected, ranging from 16 kByte to 128 MByte,
    or the size can be programmable.
config MCTRLFT_ROMASEL0
    bool "4xprogrammable"
config MCTRLFT_ROMASEL1
    bool "4x16_kByte"
config MCTRLFT_ROMASEL2
    bool "4x32_kByte"
config MCTRLFT_ROMASEL3
    bool "4x64_kByte"
config MCTRLFT_ROMASEL4
    bool "4x128_kByte"
config MCTRLFT_ROMASEL5
    bool 4x256_kByte
config MCTRLFT_ROMASEL6
    bool"4x512_kByte"
config MCTRLFT_ROMASEL7
    bool "4x1_MByte"
config MCTRLFT_ROMASEL8
    bool "4x2_MByte"
config MCTRLFT_ROMASEL9
    bool "4x4_MByte"
config MCTRLFT_ROMASEL10
    bool "4x8_MByte"
config MCTRLFT_ROMASEL11
    bool "4x16_MByte"
config MCTRLFT_ROMASEL12
    bool "4x32_MByte"
config MCTRLFT_ROMASEL13
    bool "4x64_MByte"
config MCTRLFT_ROMASEL14
    bool "4x128_MByte"
config MCTRLFT_ROMASEL15
    bool "2x256_MByte"
config MCTRLFT_ROMASEL16
    bool "2x64_kByte"
config MCTRLFT_ROMASEL17
    bool "2x128_kByte"
config MCTRLFT_ROMASEL18
    bool "2x256_kByte"
config MCTRLFT_ROMASEL19
    bool "2x512_kByte"
config MCTRLFT_ROMASEL20
    bool "2x1_MByte"
config MCTRLFT_ROMASEL21
    bool "2x2_MByte"
config MCTRLFT_ROMASEL22
    bool "2x4_MByte"
config MCTRLFT_ROMASEL23
    bool "2x8_MByte"
config MCTRLFT_ROMASEL24
    bool "2x16_MByte"
config MCTRLFT_ROMASEL25
    bool "2x32_MByte"
config MCTRLFT_ROMASEL26
    bool "2x64_MByte"
config MCTRLFT_ROMASEL27
    bool "2x128_MByte"
config MCTRLFT_ROMASEL28
    bool "2x256_MByte"
endchoice

config MCTRLFT_SDRAM
    bool "SDRAM controller"
    depends on MCTRLFT
    default n
    help
    Say Y here to enabled the PC100/PC133 SDRAM controller. If you don't
    intend to use SDRAM, say N and save about 1 kgates.

config MCTRLFT_SDRAM_SEPBUS
    bool "Separate address and data buses"
    depends on MCTRLFT && MCTRLFT_SDRAM
    default n
    help
    Say Y here if your SDRAM is connected through separate address
    and data buses (SA & SD). This is the case on the GR-CPCI-XC2V6000
    board, but not on the GR-PCI-XC2V3000 or Avnet XCV1500E boards

config MCTRLFT_SDRAM_BUS64
    bool "64-bit SDRAM data bus"
    depends on MCTRLFT && MCTRLFT_SDRAM && MCTRLFT_SDRAM_SEPBUS
    default n
    help
    Say Y here to enable 64-bit SDRAM data bus.
    
config MCTRLFT_SDRAM_INVCLK
    bool "Inverted sdclock"
    depends on MCTRLFT && MCTRLFT_SDRAM
    default n
    If you say Y here, the SDRAM clock will be inverted in respect to the
    system clock and the SDRAM signals. This will limit the SDRAM frequency
    to 50/66 MHz, but has the benefit that you will not need a PLL to
    generate the SDRAM clock. On FPGA targets, say Y. On ASIC targets,
    say N and tell your foundry to balance the SDRAM clock output.

config MCTRLFT_PAGE
    bool "Enable page burst operation"
    depends on MCTRLFT && MCTRLFT_SDRAM
    default n
    help
    Say Y here to enable SDRAM page burst operation. This will implement
    read operations using page bursts rather than 8-word bursts and save
    about 500 gates (100 LUTs). Note that not all SDRAM supports page
    burst, so use this option with care.

config MCTRLFT_PROGPAGE
    bool "Enable programmable page burst"
    depends on MCTRLFT && MCTRLFT_SDRAM && MCTRLFT_PAGE
    default n
    help
    Say Y here to enable programmable SDRAM page burst operation. This
    will allow to dynamically enable/disable page burst by setting
    bit 17 in MCFG2.

config MCTRLFT_EDAC
    bool "Enable EDAC"
    depends on MCTRLFT
    default n
    help
    Say Y here to enable the EDAC.

config MCTRLFT_EDACPIPE
    bool "Enable pipelined EDAC"
    depends on MCTRLFT && MCTRLFT_EDAC
    default n
    help
    Say Y here to enable EDAC pipelining. This will improve the timing
    on the HREADY output, but incur one extra clock latency on the
    first read data in a burst (or single access).

config MCTRLFT_RSEDAC
    bool "Enable Reed-Solomon EDAC"
    depends on MCTRLFT && MCTRLFT_EDACPIPE && MCTRLFT_SDRAM
    default n
    help
    Say Y here to enable Reed-Solomon EDAC for SDRAM. This EDAC is
    able to correct two independent 4-bit errors in a 32-bit word.

config MCTRLFT_WFB
    bool "Extended data bus drive"
    depends on MCTRLFT
    default n
    help
    If you say Y here, the PROM/SRAM write strobe (WRITEN) will
    be used to enable the data bus drivers during write cycles. This
    will guarantee that the data is still valid on the rising edge of
    the write strobe. If you say N, the write strobes and the data bus
    drivers will be clocked on the rising edge, potentially creating
    a hold time problem in external memory or I/O. However, in all
    practical cases, there is enough capacitance in the data bus lines
    to keep the value stable for a few (many?) nano-seconds after the
    buffers have been disabled, making it safe to say N and remove a
    combinational path in the netlist that might be difficult to
    analyze.

config MCTRLFT_NETLIST
    bool "Use FTMCTRL netlist"
    depends on MCTRLFT
    default n
    help
    Use a technology-specific pre-compiled netlist of FTMCTRL
