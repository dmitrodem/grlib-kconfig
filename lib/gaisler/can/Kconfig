menu "CAN configuration"
menuconfig GRCAN_ENABLE
    bool "Enable GRCAN interface" 
    help
    Say Y here to enable GRCAN core.

config GRCANIRQ
    int "Interrupt number"
    default 13
    depends on GRCAN_ENABLE
    help
    Defines which interrupt number the CAN core will generate.

config GRCANSINGLE
    bool "Enable single common interrupt"
    default n
    depends on GRCAN_ENABLE
    help
    Say Y here to assign one   interrupt  (common).
    Say N here to assign three interrupts (common, txsync, rxsync).

menuconfig CAN_ENABLE
    bool "Enable multi-core CAN interface"
    help
    Say Y here to enable one or more CAN cores. The cores has one
    AHB slave interface for accessing the control registers. The CAN core
    is register-compatible with the SAJ1000 core from Philips, with a
    few exceptions. See the GRLIP IP manual for details.

config CAN_NUM
    int "Number of CAN cores"
    default 1
    depends on CAN_ENABLE
    help
    Number of CAN cores. The module allows up to 8 independent
    CAN cores to be implemented.

config CANIO
    hex "CAN I/O area start address (haddr[19:8])"
    default C00
    depends on CAN_ENABLE
    help
    The control registers of each CAN core occupies 256 bytes, and 
    address space needed for the full module is thus 2 Kbyte. The cores
    are mapped in the AHB bus I/O area (0xFFF00000 - 0xFFFFF000). 
    This setting defines at which address in the I/O area the registers
    appear (HADDR[19:8]).

config CANIRQ
    int "Interrupt number"
    default 13
    depends on CAN_ENABLE
    help
    Defines which interrupt number the CAN core will generate.

config CANSEPIRQ
    bool "Enable separate interrupts"
    default n
    depends on CAN_ENABLE
    help
    Say Y here to assign an individual interrupt to each CAN core,
    starting from the base interrupt number. If set to N, all
    CAN cores will generate the same interrupt.

config CAN_SYNCRST
    bool "Enable synchronous reset"
    default n
    depends on CAN_ENABLE
    help
    If you say Y here, the CAN core will be implemented with
    synchronous reset rather than asynchronous. This is needed
    when the target library does not implement registers with
    async reset. Unless you know what you are doing, say N.

config CAN_FT
    bool "Enable FT FIFO memory"
    default n
    depends on CAN_ENABLE
    help
    If you say Y here, the CAN FIFOs will be implemented using
    SEU protected RAM blocks. Only applicable to the FT version
    of grlib.

menuconfig OCCAN_ENABLE
    bool "Enable CAN interface"
    help
    Say Y here to enable the CAN interace from OpenCores. The core has one
    AHB slave interface for accessing the control registers. The CAN core
    ir register-compatible with the SAJ1000 core from Philips.

config OCCANIO
    hex "CAN I/O area start address (haddr[19:8])"
    default C00
    depends on OCCAN_ENABLE
    help
    The control registers of the CAN core occupy 4 kbyte, and are 
    mapped in the AHB bus I/O area (0xFFF00000 - 0xFFFFF000). This setting
    defines at which address in the I/O area the registers appear (HADDR[19:8]).

config OCCANIRQ
    int "Interrupt number"
    default 13
    depends on OCCAN_ENABLE
    help
    Defines which interrupt number the CAN core will generate.

config OCCANLOOP
    bool "Enable loop-back testing"
    default n
    depends on OCCAN_ENABLE
    help
    If you say Y here, the receiver and trasmitter of the CAN core will
    be connected together in a loop-back fashion. This will make it 
    possible to perform loop-back test, but not data will be sent
    or received from the outside. ONLY for testing!

config OCCAN_SYNCRST
    bool "Enable synchronous reset"
    default n
    depends on OCCAN_ENABLE
    help
    If you say Y here, the CAN core will be implemented with
    synchronous reset rather than asynchronous. This is needed
    when the target library does not implement registers with
    async reset. Unless you know what you are doing, say N.

config OCCAN_FT
    bool "Enable FT FIFO memory"
    default n
    depends on OCCAN_ENABLE
    help
    If you say Y here, the CAN FIFOs will be implemented using
    SEU protected RAM blocks. Only applicable to the FT version
    of grlib.
endmenu
